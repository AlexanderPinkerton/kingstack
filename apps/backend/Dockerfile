# apps/backend/Dockerfile

# Stage 1: Build
FROM node:20 AS build
WORKDIR /app


# 1) Copy root-level manifests + Yarn config
COPY package.json        ./package.json
COPY yarn.lock           ./yarn.lock
COPY .yarnrc.yml         ./.yarnrc.yml

# 2) Copy your vendored Yarn binary & plugins
COPY .yarn/releases/     ./.yarn/releases/
# COPY .yarn/plugins/      ./.yarn/plugins/

# 3) **Copy every workspaceâ€™s package.json** so Yarn can see them, otherwise it will fail with lockfile complaints.
# This is crucial for the `--immutable` flag to work correctly.
COPY apps/backend/package.json apps/backend/package.json
COPY apps/frontend/package.json apps/frontend/package.json
COPY packages/prisma/package.json packages/prisma/package.json
COPY packages/eslint-config/package.json packages/eslint-config/package.json
# â””â”€ if you have more workspaces, repeat: COPY packages/foo/package.json packages/foo/package.json

# 4) Activate the vendored Yarn (no network fetch)
RUN corepack enable \
    && corepack prepare yarn@stable --activate

# 5) Now Yarn sees the full workspace graph â€” the immutable check will pass
RUN yarn install --immutable

# 6) Copy the rest of your source
COPY . .

# # 1) Copy root manifest + lock + Yarn config
# COPY package.json yarn.lock .yarnrc.yml ./

# # 2) Copy your vendored Yarn binary
# COPY .yarn/releases/ .yarn/releases/
# # COPY .yarn/plugins/  .yarn/plugins/

# # 3) Copy _each_ workspace package.json
# COPY apps/backend/package.json apps/backend/package.json
# # (repeat for apps/frontend, packages/*, etc.)

# # 4) Activate vendored Yarn
# RUN corepack enable \
#     && corepack prepare yarn@stable --activate

# # 5) Now Yarn can see _all_ manifestsâ€”install immutably
# RUN yarn install --immutable --json

# # 1. Copy only the files needed to run Yarn
# COPY package.json yarn.lock .yarnrc.yml .yarn/releases/ ./

# # 2. Activate the vendored Yarn without network fetch
# RUN corepack enable && corepack prepare yarn@stable --activate

# # 3. Install all dependencies
# RUN yarn install --immutable

# # ðŸ‘‡ Copy the whole monorepo context
# COPY . .

# # ðŸ‘‡ Install everything (monorepo-wide)
# # RUN corepack enable && yarn install --immutable

# ðŸ‘‡ Generate the Prisma client using the shared schema
RUN yarn workspace @kingstack/prisma prisma generate

# ðŸ‘‡ Build the backend app
WORKDIR /app/apps/backend
RUN yarn build

# Stage 2: Runtime
FROM node:20-slim

# ðŸ‘‡ Install OpenSSL (required by Prisma Client)
RUN apt-get update && apt-get install -y openssl && rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY --from=build /app/apps/backend/dist ./dist
COPY --from=build /app/node_modules ./node_modules
COPY --from=build /app/apps/backend/package.json ./

# Expose the application port
EXPOSE 3000

CMD ["node", "dist/main"]